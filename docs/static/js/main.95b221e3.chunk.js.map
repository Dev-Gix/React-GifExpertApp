{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","request","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","gif","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"sLAGaA,EAAc,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAAiB,EAEpBC,mBAAS,IAFW,mBAEjDC,EAFiD,KAErCC,EAFqC,KAsBxD,OAEI,sBAAMC,SAfW,SAACC,GAClBA,EAAEC,iBAEiB,KAAfJ,EACDK,MAAM,8BAELR,EAAY,CAACG,GAAF,mBAAiBF,KAC5BG,EAAc,MAQlB,SACI,uBAAOK,KAAK,OAAOC,MAAOP,EAAYQ,SArBzB,SAAAL,GACjBF,EAAcE,EAAEM,OAAOF,QAoB2CG,YAAY,c,QC1BzEC,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OACI,sBAAKC,UAAU,iEAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACP,mCAENN,EAHa,qDAGuC,GAHvC,YACP,mCADO,cAG8DO,UAAUF,IAHxE,SAKGG,MAAMR,GALT,cAKbS,EALa,gBAMIA,EAAQC,OANZ,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAZvB,kBAgBZY,GAhBY,4CAAH,sDCKPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZpB,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAACb,IAEGc,EDXoBK,CAAanB,GAA5BoB,EAHyB,EAG9Bd,KAASO,EAHqB,EAGrBA,QAGhB,OACI,qCACI,6BAAKb,IACJa,GAAW,4CACV,qBAAKjB,UAAU,YAAf,SAGMwB,EAAIZ,KAAI,SAAAC,GAAG,OACP,cAAC,EAAD,aAEIW,IAAKX,GACDA,GAFCA,EAAIhB,aEfxB4B,EAAe,WAAM,MAGIzC,mBAAS,IAHb,mBAGvBD,EAHuB,KAGXD,EAHW,KAS9B,OACI,qCAEI,qBAAIkB,UAAU,mBAAd,gBAAoC,gDACpC,cAAC,EAAD,CAAajB,WAAYA,EAAYD,YAAaA,IAElD,uBACA,6BAGQC,EAAW6B,KAAI,SAAAR,GAAQ,OAEnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCrBtCsB,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.95b221e3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategory, categories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleChange = e => {\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue === '') {\r\n           alert(\"Debe completar los campos\");\r\n        } else {\r\n            setCategory([inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleChange} placeholder=\"Search\"></input>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired,\r\n    categories: PropTypes.array.isRequired\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__rubberBand animate__slower\t3s\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n    const key = 'M1QnW4zL3c6meBWTx9h9DQQ85Ye4s7LH';\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=${10}&api_key=${key}&q=${encodeURI(category)}`;\r\n\r\n    const request = await fetch(url)\r\n    const { data } = await request.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\nimport { GifGridItem } from '../components/GifGridItem.js'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs.js';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n   \r\n\r\n    const {data:gif,loading} = useFetchGifs(category);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <h1>{category}</h1>\r\n            {loading && <p>Cargando...</p>}\r\n           {  <div className=\"card-grid\">\r\n\r\n                {\r\n                    gif.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            gif={img}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n\r\n\r\n            </div> }\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category]);\r\n\r\n    return state\r\n}","import React, { useState } from 'react';\r\nimport './index.css';\r\nimport { AddCategory } from './components/AddCategory.js';\r\nimport { GifGrid } from './components/GifGrid.js';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch','Samurai X','Dragon Ball'];\r\n    const [categories, setCategory] = useState([]);\r\n\r\n    /*  const handleadd =()=>{\r\n         setCategory([...categories,\"HunterXHunter\"]);\r\n     } */\r\n\r\n    return (\r\n        <>\r\n\r\n            <h2 className=\"gifExpert-tittle\">Gif<span>ExpertApp</span></h2>\r\n            <AddCategory categories={categories} setCategory={setCategory} />\r\n\r\n            <hr />\r\n            <ol>\r\n\r\n                {\r\n                    categories.map(category => (\r\n\r\n                        <GifGrid key={category} category={category} />\r\n\r\n                    ))\r\n                }\r\n\r\n            </ol>\r\n        </>\r\n\r\n    );\r\n\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp.js';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}